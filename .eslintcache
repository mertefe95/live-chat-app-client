[{"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js":"1","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js":"2","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js":"3","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js":"4","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js":"5","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js":"6","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js":"7","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js":"8","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js":"9","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js":"10","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js":"11","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js":"12"},{"size":175,"mtime":1607413375186,"results":"13","hashOfConfig":"14"},{"size":1948,"mtime":1607594130080,"results":"15","hashOfConfig":"14"},{"size":2778,"mtime":1607598674730,"results":"16","hashOfConfig":"14"},{"size":2055,"mtime":1607593735400,"results":"17","hashOfConfig":"14"},{"size":167,"mtime":1607415704742,"results":"18","hashOfConfig":"14"},{"size":345,"mtime":1607545996158,"results":"19","hashOfConfig":"14"},{"size":932,"mtime":1607547531173,"results":"20","hashOfConfig":"14"},{"size":77,"mtime":1607540228851,"results":"21","hashOfConfig":"14"},{"size":1592,"mtime":1607593491220,"results":"22","hashOfConfig":"14"},{"size":1893,"mtime":1607593797620,"results":"23","hashOfConfig":"14"},{"size":271,"mtime":1607588337488,"results":"24","hashOfConfig":"14"},{"size":323,"mtime":1607594106344,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"talv8h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js",[],["55","56"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js",["57","58","59","60","61","62"],"import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/layouts/Header\";\nimport Footer from \"./components/layouts/Footer\";\nimport Register from \"./components/Register\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Login from \"./components/Login\";\nimport AdminLogin from \"./components/AdminLogin\";\nimport Homepage from \"./components/Homepage\";\nimport Axios from \"axios\";\nimport UserContext from \"./components/context/UserContext\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"http://localhost:8080/api/tokenIsValid\", \n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://localhost:8080/api\", \n        { headers: { \"x-auth-token\": token },\n      });\n\n      setUserData({\n        token,\n        user: userRes.data,\n      });\n      \n      }\n    };\n\n\n    checkLoggedIn();\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n    <Router>\n    <UserContext.Provider value={{userData, setUserData}}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/login\" exact component={Login} />\n        <Route exact path=\"/register\" exact component={Register} />\n        <Route exact path=\"/forgot-password\" exact component={ForgotPassword} />\n        <Route exact path=\"/admin-login\" exact component={AdminLogin} />\n        <Route exact path=\"/\" exact component={Homepage} />\n      </Switch>\n      <Footer />\n      </UserContext.Provider>\n    </Router>\n  \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js",["63","64"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js",["65"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginUser\r\n                );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n      \r\n\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Login</h2>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n        <ul>\r\n            <li><Link to=\"/forgot-password\">Forgot your password?</Link></li>\r\n            <li><Link to=\"/admin-login\">Login as Admin</Link></li>\r\n        </ul>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default Login;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js",["66","67"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n        const currentUser = { email  };\r\n        await Axios.post(\r\n            \"http://localhost:8080/api/forgot-password\", \r\n            currentUser\r\n        );\r\n\r\n        await setVerifyMessage({\r\n            text: \"Please check your email for password change.\"\r\n        })\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n      \r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Forgot Password</h2>\r\n\r\n    <h4>Please enter your email for password change.</h4>\r\n\r\n    <h4> {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"forgot-email\">Email</label>\r\n        <input id=\"forgot-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default ForgotPassword;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js",["68","69"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n        const loginAdmin = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginAdmin\r\n            );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Admin Login</h2>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Admin Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Admin Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default AdminLogin;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":12,"column":42,"nodeType":"76","messageId":"77","endLine":12,"endColumn":46},{"ruleId":"78","severity":1,"message":"79","line":57,"column":36,"nodeType":"80","endLine":57,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":58,"column":39,"nodeType":"80","endLine":58,"endColumn":44},{"ruleId":"78","severity":1,"message":"79","line":59,"column":46,"nodeType":"80","endLine":59,"endColumn":51},{"ruleId":"78","severity":1,"message":"79","line":60,"column":42,"nodeType":"80","endLine":60,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":61,"column":31,"nodeType":"80","endLine":61,"endColumn":36},{"ruleId":"74","severity":1,"message":"81","line":19,"column":13,"nodeType":"76","messageId":"77","endLine":19,"endColumn":24},{"ruleId":"74","severity":1,"message":"82","line":20,"column":11,"nodeType":"76","messageId":"77","endLine":20,"endColumn":18},{"ruleId":"74","severity":1,"message":"83","line":14,"column":27,"nodeType":"76","messageId":"77","endLine":14,"endColumn":43},{"ruleId":"74","severity":1,"message":"81","line":16,"column":13,"nodeType":"76","messageId":"77","endLine":16,"endColumn":24},{"ruleId":"74","severity":1,"message":"82","line":17,"column":11,"nodeType":"76","messageId":"77","endLine":17,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":2,"column":22,"nodeType":"76","messageId":"77","endLine":2,"endColumn":26},{"ruleId":"74","severity":1,"message":"83","line":14,"column":27,"nodeType":"76","messageId":"77","endLine":14,"endColumn":43},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'setVerifyMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]