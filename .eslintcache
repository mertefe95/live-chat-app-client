[{"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js":"1","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js":"2","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js":"3","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js":"4","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js":"5","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js":"6","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js":"7","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js":"8","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js":"9","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js":"10","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js":"11","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js":"12","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Join.js":"13","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Chat.js":"14"},{"size":175,"mtime":1607413375186,"results":"15","hashOfConfig":"16"},{"size":2143,"mtime":1607666521833,"results":"17","hashOfConfig":"16"},{"size":2441,"mtime":1607631023528,"results":"18","hashOfConfig":"16"},{"size":2027,"mtime":1607609321126,"results":"19","hashOfConfig":"16"},{"size":167,"mtime":1607415704742,"results":"20","hashOfConfig":"16"},{"size":345,"mtime":1607545996158,"results":"21","hashOfConfig":"16"},{"size":932,"mtime":1607547531173,"results":"22","hashOfConfig":"16"},{"size":77,"mtime":1607540228851,"results":"23","hashOfConfig":"16"},{"size":1586,"mtime":1607611830261,"results":"24","hashOfConfig":"16"},{"size":1893,"mtime":1607608254941,"results":"25","hashOfConfig":"16"},{"size":271,"mtime":1607588337488,"results":"26","hashOfConfig":"16"},{"size":323,"mtime":1607594106344,"results":"27","hashOfConfig":"16"},{"size":1186,"mtime":1607612705683,"results":"28","hashOfConfig":"16"},{"size":963,"mtime":1607666621365,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"talv8h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js",[],["64","65"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js",["66","67","68","69","70","71","72","73"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js",["74","75","76"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const [verifyMessage, setVerifyMessage] = useState({\r\n    text: undefined,\r\n  });\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = { username, email, password };\r\n      await Axios.post(\"http://localhost:8080/api/register\", newUser);\r\n\r\n      setVerifyMessage({\r\n        text: \"Please verify your email to proceed login.\",\r\n      });\r\n    } catch (err) {\r\n       err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n  const responseSuccessGoogle = async (response) => {\r\n    console.log(response);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Register</h2>\r\n      <h3>{verifyMessage.text}</h3>\r\n      <h4>\r\n        {error && (\r\n          <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n        )}\r\n      </h4>\r\n      <form className=\"form\" onSubmit={submit}>\r\n        <label htmlFor=\"register-username\">Username</label>\r\n        <input\r\n          id=\"register-username\"\r\n          type=\"username\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"register-email\">Email</label>\r\n        <input\r\n          id=\"register-email\"\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"register-password\">Password</label>\r\n        <input\r\n          id=\"register-password\"\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <p>Or</p>\r\n      <h2>Login with Google Account</h2>\r\n      <GoogleLogin\r\n        clientId=\"310321453603-jj2qtlkeer5o2u30tdnf216knss728ia.apps.googleusercontent.com\"\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={responseSuccessGoogle}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n\r\n      <p>Or</p>\r\n      <h2>Login with Facebook Account</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js",["77"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginUser);\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Login</h2>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n        <ul>\r\n            <li><Link to=\"/forgot-password\">Forgot your password?</Link></li>\r\n            <li><Link to=\"/admin-login\">Login as Admin</Link></li>\r\n        </ul>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default Login;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js",["78","79"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n        const currentUser = { email  };\r\n        await Axios.post(\r\n            \"http://localhost:8080/api/forgot-password\", \r\n            currentUser\r\n        );\r\n\r\n        await setVerifyMessage({\r\n            text: \"Please check your email for password change.\"\r\n        })\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Forgot Password</h2>\r\n\r\n    <h4>Please enter your email for password change.</h4>\r\n\r\n    <h4> {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"forgot-email\">Email</label>\r\n        <input id=\"forgot-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default ForgotPassword;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js",["80","81"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n        const loginAdmin = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginAdmin\r\n            );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Admin Login</h2>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Admin Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Admin Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default AdminLogin;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Join.js",["82","83","84","85","86"],"import React, { useState, useContext } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"./context/UserContext\";\r\n\r\nfunction Join() {\r\n    const [name, setName] = useState('')\r\n    const [room, setRoom] = useState('')\r\n    \r\n    const { userData, setUserData } = useContext(UserContext);\r\n    console.log(userData)\r\n    return (\r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Join into a Room</h1>\r\n                <div className=\"join-select-div\"><select placeholder=\"\" className=\"joinInput\" type=\"text\" onChange={(event) => setName(event.target.value)} >\r\n                        <option value=\"General\">General</option>\r\n                        <option value=\"Politics\">Politics</option>\r\n                        <option value=\"Fun\">Fun</option>\r\n                    </select>\r\n                </div>\r\n                <Link>\r\n                    <button className=\"join-button\" type=\"submit\">Join to the Room</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Chat.js",["87","88","89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":15,"column":42,"nodeType":"97","messageId":"98","endLine":15,"endColumn":46},{"ruleId":"99","severity":1,"message":"100","line":58,"column":36,"nodeType":"101","endLine":58,"endColumn":41},{"ruleId":"99","severity":1,"message":"100","line":59,"column":35,"nodeType":"101","endLine":59,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":60,"column":35,"nodeType":"101","endLine":60,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":61,"column":39,"nodeType":"101","endLine":61,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":62,"column":46,"nodeType":"101","endLine":62,"endColumn":51},{"ruleId":"99","severity":1,"message":"100","line":63,"column":42,"nodeType":"101","endLine":63,"endColumn":47},{"ruleId":"99","severity":1,"message":"100","line":64,"column":31,"nodeType":"101","endLine":64,"endColumn":36},{"ruleId":"95","severity":1,"message":"102","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":37},{"ruleId":"95","severity":1,"message":"103","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"95","severity":1,"message":"104","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":19},{"ruleId":"95","severity":1,"message":"105","line":14,"column":27,"nodeType":"97","messageId":"98","endLine":14,"endColumn":43},{"ruleId":"95","severity":1,"message":"106","line":16,"column":13,"nodeType":"97","messageId":"98","endLine":16,"endColumn":24},{"ruleId":"95","severity":1,"message":"107","line":17,"column":11,"nodeType":"97","messageId":"98","endLine":17,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":2,"column":22,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"105","line":14,"column":27,"nodeType":"97","messageId":"98","endLine":14,"endColumn":43},{"ruleId":"95","severity":1,"message":"103","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"108","line":7,"column":12,"nodeType":"97","messageId":"98","endLine":7,"endColumn":16},{"ruleId":"95","severity":1,"message":"109","line":8,"column":12,"nodeType":"97","messageId":"98","endLine":8,"endColumn":16},{"ruleId":"95","severity":1,"message":"110","line":8,"column":18,"nodeType":"97","messageId":"98","endLine":8,"endColumn":25},{"ruleId":"95","severity":1,"message":"106","line":10,"column":23,"nodeType":"97","messageId":"98","endLine":10,"endColumn":34},{"ruleId":"95","severity":1,"message":"106","line":9,"column":21,"nodeType":"97","messageId":"98","endLine":9,"endColumn":32},{"ruleId":"95","severity":1,"message":"111","line":12,"column":12,"nodeType":"97","messageId":"98","endLine":12,"endColumn":20},{"ruleId":"95","severity":1,"message":"109","line":13,"column":12,"nodeType":"97","messageId":"98","endLine":13,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":24,"column":18,"nodeType":"114","endLine":24,"endColumn":30},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'useHistory' is defined but never used.","'UserContext' is defined but never used.","'setVerifyMessage' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'name' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]