[{"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js":"1","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js":"2","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js":"3","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js":"4","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js":"5","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js":"6","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js":"7","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js":"8","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js":"9","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js":"10","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js":"11","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js":"12"},{"size":175,"mtime":1607413375186,"results":"13","hashOfConfig":"14"},{"size":2069,"mtime":1607605637845,"results":"15","hashOfConfig":"14"},{"size":2807,"mtime":1607604390742,"results":"16","hashOfConfig":"14"},{"size":2055,"mtime":1607593735400,"results":"17","hashOfConfig":"14"},{"size":167,"mtime":1607415704742,"results":"18","hashOfConfig":"14"},{"size":345,"mtime":1607545996158,"results":"19","hashOfConfig":"14"},{"size":932,"mtime":1607547531173,"results":"20","hashOfConfig":"14"},{"size":77,"mtime":1607540228851,"results":"21","hashOfConfig":"14"},{"size":1592,"mtime":1607593491220,"results":"22","hashOfConfig":"14"},{"size":1893,"mtime":1607593797620,"results":"23","hashOfConfig":"14"},{"size":271,"mtime":1607588337488,"results":"24","hashOfConfig":"14"},{"size":323,"mtime":1607594106344,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"talv8h",{"filePath":"29","messages":"30","errorCount":2,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\index.js",[],["54","55"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\App.js",["56","57","58","59","60","61","62","63","64","65"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Register.js",["66","67"],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Login.js",["68"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginUser\r\n                );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n      \r\n\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Login</h2>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n        <ul>\r\n            <li><Link to=\"/forgot-password\">Forgot your password?</Link></li>\r\n            <li><Link to=\"/admin-login\">Login as Admin</Link></li>\r\n        </ul>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default Login;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\layouts\\Header.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AuthOptions.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\context\\UserContext.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\ForgotPassword.js",["69","70"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n        const currentUser = { email  };\r\n        await Axios.post(\r\n            \"http://localhost:8080/api/forgot-password\", \r\n            currentUser\r\n        );\r\n\r\n        await setVerifyMessage({\r\n            text: \"Please check your email for password change.\"\r\n        })\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n      \r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Forgot Password</h2>\r\n\r\n    <h4>Please enter your email for password change.</h4>\r\n\r\n    <h4> {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"forgot-email\">Email</label>\r\n        <input id=\"forgot-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default ForgotPassword;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\AdminLogin.js",["71","72"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport ErrorNotice from \"./misc/ErrorNotice\";\r\n\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n        const loginAdmin = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginAdmin\r\n            );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"page\">\r\n    <h2>Admin Login</h2>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n\r\n    <form className=\"form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Admin Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Admin Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default AdminLogin;\r\n","C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\MERT\\Desktop\\live-chat-app\\client\\src\\components\\Homepage.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":13,"column":42,"nodeType":"79","messageId":"80","endLine":13,"endColumn":46},{"ruleId":"81","severity":1,"message":"82","line":58,"column":36,"nodeType":"83","endLine":58,"endColumn":41},{"ruleId":"81","severity":1,"message":"82","line":59,"column":35,"nodeType":"83","endLine":59,"endColumn":40},{"ruleId":"84","severity":2,"message":"85","line":59,"column":52,"nodeType":"79","messageId":"86","endLine":59,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":60,"column":35,"nodeType":"83","endLine":60,"endColumn":40},{"ruleId":"84","severity":2,"message":"87","line":60,"column":52,"nodeType":"79","messageId":"86","endLine":60,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":61,"column":39,"nodeType":"83","endLine":61,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":62,"column":46,"nodeType":"83","endLine":62,"endColumn":51},{"ruleId":"81","severity":1,"message":"82","line":63,"column":42,"nodeType":"83","endLine":63,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":64,"column":31,"nodeType":"83","endLine":64,"endColumn":36},{"ruleId":"77","severity":1,"message":"88","line":19,"column":13,"nodeType":"79","messageId":"80","endLine":19,"endColumn":24},{"ruleId":"77","severity":1,"message":"89","line":20,"column":11,"nodeType":"79","messageId":"80","endLine":20,"endColumn":18},{"ruleId":"77","severity":1,"message":"90","line":14,"column":27,"nodeType":"79","messageId":"80","endLine":14,"endColumn":43},{"ruleId":"77","severity":1,"message":"88","line":16,"column":13,"nodeType":"79","messageId":"80","endLine":16,"endColumn":24},{"ruleId":"77","severity":1,"message":"89","line":17,"column":11,"nodeType":"79","messageId":"80","endLine":17,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":2,"column":22,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"90","line":14,"column":27,"nodeType":"79","messageId":"80","endLine":14,"endColumn":43},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-undef","'Join' is not defined.","undef","'Chat' is not defined.","'setUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'setVerifyMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]